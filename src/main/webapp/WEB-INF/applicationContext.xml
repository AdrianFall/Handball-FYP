<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">



	<jee:jndi-lookup jndi-name="jdbc/postgresql" id="dataSource"
		expected-type="javax.sql.DataSource"></jee:jndi-lookup>




	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="emf">
		<property name="packagesToScan" value="af.handball.entity" />
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="handball-game" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>

	</bean>

		<!-- Start Scheduling -->
<!-- 
 	<bean id="scheduler" name="scheduler"
	
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
	
		scope="singleton">
	
		<property name="quartzProperties">
	
			<props>
	
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
	
				<prop key="org.quartz.scheduler.instanceName">quartzScheduler</prop>
	
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
	
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</prop>
				
				<prop key="org.quartz.jobStore.useProperties">true</prop>
	
				<prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
	
				<prop key="org.quartz.jobStore.isClustered">false</prop>
	
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
	
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	
			</props>
	
		</property>
	
		<property name="dataSource">
	
			<ref bean="dataSource" />
	
		</property>
	
		<property name="triggers"> <list> <ref bean="trigger" /> </list> </property>
	
	</bean> 
 -->







<!-- 
	<bean name="myJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="af.handball.scheduler.job.PrintJob" />
		<property name="requestsRecovery" value="true" />
		<property name="durability" value="true" />
	</bean>



	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="myJob" />

		<property name="cronExpression" value="0 0/5 * * * ?" />

	</bean>

	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="myJob" />
		<property name="repeatInterval" value="1000"/>
		<property name="repeatCount" value="0"/>

	</bean>

	<bean id="quartzScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="myJob" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
		<property name="dataSource"><ref bean="dataSource" /></property> 
		<property name="transactionManager" ref="transactionManager" />
		<property name="schedulerName" value="quartzScheduler" />
		<property name="configLocation" value="file:///quartz.properties" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="autoStartup" value="true" />
		<property name="quartzProperties">
	
			<props>
	
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
	
				<prop key="org.quartz.scheduler.instanceName">quartzScheduler</prop>
	
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
	
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</prop>
				
				<prop key="org.quartz.jobStore.useProperties">true</prop>
	
				<prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
	
				<prop key="org.quartz.jobStore.isClustered">false</prop>
	
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
	
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	
			</props>
	
		</property>
	
		<property name="jobFactory">
			<bean class="it.myproject.scheduler.AutowiringSpringBeanJobFactory" />
		</property>
	</bean> 
	
	 -->
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- <bean name="printJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="af.handball.scheduler.job.PrintJob" />
	    <property name="jobDataMap">
	        <map>
	            <entry key="anotherBean" value-ref="anotherBean" />
	        </map>
	    </property>
	    nondurable jobs have a life span bounded by the existence of its triggers.
	    <property name="durability" value="true" />
	</bean> -->
	
	    <!-- End Scheduling -->

	<!-- Job Detail -->
<!-- 	
	<bean name="printJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="af.handball.scheduler.job.PrintJob" />
	    <property name="jobDataMap">
	        <map>
	            <entry key="anotherBean" value-ref="anotherBean" />
	        </map>
	    </property>
	    nondurable jobs have a life span bounded by the existence of its triggers.
	    <property name="durability" value="true" />
	</bean>
	
	
	Run the job every 2 seconds with initial delay of 1 second
	<bean id="printTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
	    <property name="jobDetail" ref="printJobDetail" />
	    <property name="startDelay" value="1000" />
	    <property name="repeatInterval" value="8000" />
	</bean>
	
	
	Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler
	<bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="jobDetails">
	        <list>
	            <ref bean="simpleJobDetail" />
	            <ref bean="printJobDetail" />
	        </list>
	    </property>
	 
	    <property name="triggers">
	        <list>
	            <ref bean="printTrigger" />
	            <ref bean="cronTrigger" />
	        </list>
	    </property>
	</bean>
	
	
	 -->
	

	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="dataSource" ref="dataSource" />	
	</bean>
	<jpa:repositories base-package="af.handball.repository" />

	<!-- <beans profile="prod"> <import resource="database-prod.xml"/> </beans> -->

	<context:component-scan base-package="af.handball">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

</beans>